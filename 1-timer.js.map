{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nlet timeInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    timeInterval = userSelectedDate - new Date();\n\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n      startButton.classList.add(`btn-active`);\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\nconst startButton = document.querySelector('button');\nconst showTime = document.querySelectorAll('.value');\n\nstartButton.disabled = true;\nstartButton.addEventListener('click', event => {\n  const intervalId = setInterval(() => {\n    timeInterval = userSelectedDate - new Date();\n    startButton.classList.remove(`btn-active`);\n    if (timeInterval < 1) {\n      startButton.disabled = true;\n      clearInterval(intervalId);\n      return;\n    }\n    const timer = convertMs(timeInterval);\n    showTime[0].innerText = timer.days.toString().padStart(2, '0');\n    showTime[1].innerText = timer.hours.toString().padStart(2, '0');\n    showTime[2].innerText = timer.minutes.toString().padStart(2, '0');\n    showTime[3].innerText = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","timeInterval","options","selectedDates","iziToast","startButton","flatpickr","showTime","event","intervalId","timer","convertMs","ms","days","hours","minutes","seconds"],"mappings":"+IAMA,IAAIA,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAClCF,EAAeD,EAAmB,IAAI,KAElCA,GAAoB,IAAI,MAC1BI,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,EACDC,EAAY,SAAW,KAEvBA,EAAY,SAAW,GACvBA,EAAY,UAAU,IAAI,YAAY,EAEzC,CACH,EAEAC,EAAU,mBAAoBJ,CAAO,EACrC,MAAMG,EAAc,SAAS,cAAc,QAAQ,EAC7CE,EAAW,SAAS,iBAAiB,QAAQ,EAEnDF,EAAY,SAAW,GACvBA,EAAY,iBAAiB,QAASG,GAAS,CAC7C,MAAMC,EAAa,YAAY,IAAM,CAGnC,GAFAR,EAAeD,EAAmB,IAAI,KACtCK,EAAY,UAAU,OAAO,YAAY,EACrCJ,EAAe,EAAG,CACpBI,EAAY,SAAW,GACvB,cAAcI,CAAU,EACxB,MACD,CACD,MAAMC,EAAQC,EAAUV,CAAY,EACpCM,EAAS,CAAC,EAAE,UAAYG,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7DH,EAAS,CAAC,EAAE,UAAYG,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9DH,EAAS,CAAC,EAAE,UAAYG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEH,EAAS,CAAC,EAAE,UAAYG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACjE,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}